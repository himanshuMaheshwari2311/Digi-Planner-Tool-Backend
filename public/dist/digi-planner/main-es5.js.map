{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin-board services/admin-board.service.ts","webpack:///src/app/admin-board/admin-board.component.ts","webpack:///src/app/admin-board/admin-board.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board.service.ts","webpack:///src/app/constants.ts","webpack:///src/app/create-board-dialog/create-board-dialog.component.ts","webpack:///src/app/create-board-dialog/create-board-dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/join-room-dialog/join-room-dialog.component.ts","webpack:///src/app/join-room-dialog/join-room-dialog.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/socket-services/socket.service.ts","webpack:///src/app/socket-services/user-socket.service.ts","webpack:///src/app/user-board-services/constants.service.ts","webpack:///src/app/user-board-services/group.service.ts","webpack:///src/app/user-board-services/scaling.service.ts","webpack:///src/app/user-board-services/shape.service.ts","webpack:///src/app/user-board-services/user-database.service.ts","webpack:///src/app/user-board/user-board.component.ts","webpack:///src/app/user-board/user-board.component.html","webpack:///src/app/user.service.ts","webpack:///src/app/view-boards/view-boards.component.ts","webpack:///src/app/view-boards/view-boards.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///jsdom (ignored)","webpack:///jsdom/lib/jsdom/living/generated/utils (ignored)","webpack:///jsdom/lib/jsdom/utils (ignored)","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminBoardService","http","base64","roomCode","userId","post","is_published","put","responseType","providedIn","AdminBoardComponent","route","adminBoardService","location","authService","snackBar","title","colors","jsonString","canvas","Canvas","backgroundColor","isDrawingMode","setHeight","setWidth","selectedColor","queryParams","subscribe","params","boardTitle","authState","user","currentUser","email","convertedCanvas","toDataURL","sendingData","responseData","showSnackBar","back","message","action","open","duration","Image","fromURL","img","scale","width","set","transparentCorners","top","left","scaleX","scaleY","add","confirm","clear","Circle","radius","fill","Rect","height","Triangle","Textbox","stroke","fontSize","fontFamily","textAlign","color","activeObject","getActiveObjects","forEach","object","remove","discardActiveObject","togglePen","box","circle","triangle","cloud","dialog","textBox","reset","deleteObjects","exportJsonAdmin","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","router","signOut","navigate","console","log","goToHome","config","PROVIDER_ID","provider","provideConfig","AppModule","provide","useFactory","declarations","entryComponents","providers","bootstrap","BoardService","room_code","get","board_title","room_title","PORT","URI","clientId","CreateBoardDialogComponent","data","dialogRef","boardService","isexist","emptyRoomCode","emptyBoardtitle","close","boardtitle","roomcode","length","isExist","result","err","validateTitle","validateRoomCode","onCancel","HomeComponent","userService","isAdmin","isUser","inH","window","innerHeight","getUserType","userType","afterClosed","createBoard","addJoinedRoom","value","JoinRoomDialogComponent","LoginComponent","isLoggedIn","event","signIn","error","MatModule","SocketService","url","socket","group","emit","angle","shape","groupId","text","textId","can","arr","f","s","roomId","removeAllListeners","undefined","UserSocketService","groupService","shapeService","socketService","renderer","joinRoom","on","document","getElementById","getObjects","obj","Group","moveLines","setCoords","renderAll","addRectangle","addEllipse","addTriangle","h","gr","_objects","ob","fontStyle","firstName","unGroup","lockMovementX","lockMovementY","g","selectedGroup","regroup","setBackground","selectedElements","push","drawLineTwoPoints","splice","ConstantsService","HideControls","tl","tr","bl","br","ml","mt","mr","mb","mtr","userBackURL","starIconURL","connectText","disconnectText","GroupService","scalingService","constants","userDatabase","givingId","coords","Line","strokeWidth","opacity","selectable","preserveObjectStacking","x","y","connections","groupID","editing","scaleShapes","getBoundingRect","isEditable","type","setControlsVisibility","addEventListeners","sendingCanvas","toJSON","handler","clicked","setTimeout","items","_restoreObjectsState","item","u","groupCoord","getPointByOrigin","createGroup","group1","group2","line","makeLine","getCenterPoint","sendToBack","name","connectedGroup","connect","connectButtonText","newPoint","connection","x1","y1","x2","y2","getActiveObject","deleteGroup","roomID","index","otherGroupConnections","btnLeft","btnTop","delteBtn","createElement","src","style","appendChild","getElementsByClassName","addEventListener","addDeleteBtn","oCoords","sendGroup","doubleClickEvent","drawLines","pop","somethingModified","text1","setActiveObject","enterEditing","selectAll","ScalingService","textBoundingRect","resize","compareTextShape","Ellipse","rx","ry","shapeDimen","textDimen","Math","max","ShapeService","userDatabaseService","image","Object","prototype","hoverCursor","selection","getTitleFromDatabase","setBackgroundImage","imageEle","onload","ellipse","originX","originY","addText","rect","strokeLineJoin","textVal","IText","charSpacing","addTextListener","regr","colorChange","getRoomData","roomData","room_data","canvas_json","loadCanvas","JSON","parse","canvasJson","newCanvas","loadFromJSON","groupArray","drawLinesWhileLoading","ungroupOnLoad","MockShapeService","UserDatabaseService","canvasJSON","backgroundImage","userID","stringify","UserBoardComponent","userSocketService","snapshot","queryParamMap","initCanvas","init","disconnect","somethingAdded","addObj","clearCanvas","snackBarRef","onAction","canvasContent","msToBlob","blob","navigator","msSaveBlob","replace","link","download","href","click","changeColor","exportAsImage","UserService","ViewBoardsComponent","viewBoard","boards","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\n\r\ninterface canvasData{\r\n  base64:string;\r\n  is_published:string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminBoardService {\r\n\r\n  base64:string;\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  sendingData(base64,roomCode,userId){\r\n\r\n    this.base64 = base64;\r\n\r\n    const post : canvasData={\r\n      base64 : this.base64,\r\n      is_published : 'true'\r\n    };\r\n\r\n    return this.http.put(`http://localhost:8080/board/${userId}/${roomCode}` , post , {responseType:'json'});\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { AdminBoardService } from '../admin-board services/admin-board.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthService,SocialUser } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'app-admin-board',\r\n  templateUrl: './admin-board.component.html',\r\n  styleUrls: ['./admin-board.component.css'],\r\n})\r\nexport class AdminBoardComponent implements OnInit {\r\n  canvas: fabric.Canvas;\r\n  title = 'adminboard';\r\n  convertedCanvas;\r\n  currentUser:SocialUser;\r\n  userId:string\r\n\r\n  colors = ['aqua', 'BlueViolet', 'orange', 'magenta', 'red', 'blue', 'lime'];\r\n\r\n  selectedColor: string;\r\n  roomCode: string;\r\n  boardTitle: string;\r\n  jsonString: string = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private adminBoardService: AdminBoardService,\r\n    private location: Location,\r\n    private authService:AuthService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.canvas = new fabric.Canvas('canvas', {\r\n      backgroundColor: 'white',\r\n      isDrawingMode: false,\r\n    });\r\n\r\n    this.canvas.setHeight(650);\r\n    this.canvas.setWidth(1190);\r\n    this.selectedColor = 'aqua';\r\n\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.roomCode = params['roomCode'];\r\n      this.boardTitle = params['boardTitle'];\r\n    });\r\n\r\n    this.authService.authState.subscribe((user) => {\r\n      this.currentUser=user;\r\n      this.userId=this.currentUser.email;\r\n    });\r\n  }\r\n\r\n  exportJsonAdmin() {\r\n    this.convertedCanvas = this.canvas.toDataURL();\r\n    this.adminBoardService\r\n      .sendingData(this.convertedCanvas, this.roomCode, this.userId)\r\n      .subscribe((responseData) => {\r\n        this.showSnackBar( responseData[\"messages\"][0] , 'OK' );\r\n      });\r\n\r\n    this.location.back();\r\n  }\r\n\r\n  showSnackBar(message: string, action: string): void {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  togglePen() {\r\n    this.canvas.isDrawingMode = !this.canvas.isDrawingMode;\r\n  }\r\n\r\n  dialog() {\r\n    fabric.Image.fromURL('../assets/images/dialog.jpg', (img) => {\r\n      const scale = 150 / img.width;\r\n      img.set({\r\n        transparentCorners: false,\r\n        top: 10,\r\n        left: 10,\r\n        scaleX: scale,\r\n        scaleY: scale,\r\n      });\r\n      this.canvas.add(img);\r\n    });\r\n    this.canvas.isDrawingMode = false;\r\n  }\r\n\r\n  cloud() {\r\n    fabric.Image.fromURL('../assets/images/cloud.png', (img) => {\r\n      const scale = 150 / img.width;\r\n      img.set({\r\n        top: 10,\r\n        left: 10,\r\n        scaleX: scale,\r\n        scaleY: scale,\r\n      });\r\n      this.canvas.add(img);\r\n    });\r\n    this.canvas.isDrawingMode = false;\r\n  }\r\n\r\n  reset() {\r\n    if (confirm('Are you sure you want to reset canvas?')) {\r\n      this.canvas.clear();\r\n      this.canvas.isDrawingMode = false;\r\n    }\r\n  }\r\n\r\n  circle() {\r\n    this.canvas.isDrawingMode = false;\r\n    this.canvas.add(\r\n      new fabric.Circle({\r\n        radius: 50,\r\n        fill: this.selectedColor,\r\n        left: 10,\r\n        top: 10,\r\n      })\r\n    );\r\n  }\r\n\r\n  box() {\r\n    this.canvas.isDrawingMode = false;\r\n    this.canvas.add(\r\n      new fabric.Rect({\r\n        width: 100,\r\n        height: 100,\r\n        fill: this.selectedColor,\r\n        left: 10,\r\n        top: 10,\r\n      })\r\n    );\r\n  }\r\n\r\n  triangle() {\r\n    this.canvas.isDrawingMode = false;\r\n    this.canvas.add(\r\n      new fabric.Triangle({\r\n        width: 80,\r\n        height: 80,\r\n        fill: this.selectedColor,\r\n        left: 10,\r\n        top: 10,\r\n      })\r\n    );\r\n  }\r\n\r\n  textBox() {\r\n    this.canvas.isDrawingMode = false;\r\n    this.canvas.add(\r\n      new fabric.Textbox('MyText', {\r\n        width: 150,\r\n        top: 5,\r\n        left: 5,\r\n        stroke: this.selectedColor,\r\n        fontSize: 20,\r\n        fontFamily: 'Verdana',\r\n        textAlign: 'center',\r\n      })\r\n    );\r\n  }\r\n\r\n  changeColor(color) {\r\n    this.selectedColor = color;\r\n  }\r\n\r\n  deleteObjects() {\r\n    this.canvas.isDrawingMode = false;\r\n    var activeObject = this.canvas.getActiveObjects();\r\n    if (activeObject) {\r\n      if (confirm('Are you sure to delete selection?')) {\r\n        activeObject.forEach((object) => {\r\n          this.canvas.remove(object);\r\n        });\r\n      }\r\n      this.canvas.discardActiveObject();\r\n    }\r\n  }\r\n}\r\n","<div style=\"text-align: center;\">\r\n\r\n  <div class=\"button-row\">\r\n\r\n    <div class=\"title\">{{boardTitle}}</div>\r\n\r\n    <div class=\"button-row-right\">\r\n      <button mat-flat-button title=\"Pen\" (click)=\"togglePen()\" color=\"primary\">\r\n        <mat-icon>edit</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"Box\" class=\"addShape\" (click)=\"box()\" color=\"primary\">\r\n        <mat-icon>crop_3_2</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"Circle\" (click)=\"circle()\" color=\"primary\">\r\n        <mat-icon>brightness_1</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"Triangle\" (click)=\"triangle()\" color=\"primary\">\r\n        <mat-icon>change_history</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"Cloud Shape\" (click)=\"cloud()\" color=\"primary\">\r\n        <mat-icon>cloud_queue</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"Dialog Box\" (click)=\"dialog()\" color=\"primary\">\r\n        <mat-icon>chat_bubble_outline</mat-icon>\r\n      </button>\r\n      <button mat-flat-button title=\"TextBox\" (click)=\"textBox()\" color=\"primary\">\r\n        <mat-icon>text_rotation_none</mat-icon>\r\n      </button>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div style=\"display: inline-flex;\">\r\n\r\n    <div class=\"button-col\">\r\n      <div *ngFor=\"let color of colors;\">\r\n        <button mat-mini-fab title={{color}} class={{color}} style=\"border: 1px solid black;\" (click)=\"changeColor(color)\">\r\n          <mat-icon *ngIf=\"selectedColor == color\" [style.color]=\"'black'\">done</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <canvas id=\"canvas\"></canvas>\r\n\r\n    <div class=\"button-col\">\r\n      <button mat-fab title=\"Reset\" class=\"clearButton\" (click)=\"reset()\" color=\"warn\">\r\n        <mat-icon>settings_backup_restore</mat-icon>\r\n      </button>\r\n      <button mat-fab title=\"Delete\" (click)=\"deleteObjects()\" color=\"warn\">\r\n        <mat-icon>delete_forever</mat-icon>\r\n      </button>\r\n      <button class=\"convertCanvas\" title=\"Save Canvas\" mat-fab (click)=\"exportJsonAdmin()\" color=\"warn\">\r\n        <mat-icon>save</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserBoardComponent } from './user-board/user-board.component';\r\nimport { AdminBoardComponent } from './admin-board/admin-board.component';\r\nimport { ViewBoardsComponent } from './view-boards/view-boards.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'login', component: LoginComponent },\r\n  { path:'home', component: HomeComponent },\r\n  { path:'userboard', component: UserBoardComponent },\r\n  { path:'adminboard', component: AdminBoardComponent },\r\n  { path:'viewboard' ,component: ViewBoardsComponent},\r\n  { path: '', redirectTo:'/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, SocialUser } from 'angularx-social-login';\r\nimport { UserService } from './user.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title:string = 'digi-planner';\r\n  currentUser:SocialUser;\r\n  userType:string;\r\n  constructor(private authService:AuthService,private router:Router){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.authState.subscribe((user) => {\r\n      this.currentUser = user;\r\n    });  \r\n  }\r\n\r\n  signOut(){\r\n    this.authService.signOut();\r\n  }\r\n\r\n  goToHome(){\r\n    if(this.currentUser){\r\n        this.router.navigate(['/home']);      \r\n    }else{\r\n      console.log('not logged in');\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }  \r\n}\r\n","<mat-toolbar>\r\n  <img src=\"../assets/library.png\" width=\"25\" height=\"25\">\r\n  <span class=\"title\" (click)=\"goToHome()\">   DigiPlanner</span>\r\n  <span class=\"spacer\"></span>\r\n  <span class=\"userIdLabel\" *ngIf=\"currentUser\">{{currentUser.email}}</span>\r\n  <button *ngIf=\"currentUser\" mat-button matTooltip=\"logout\" class=\"logoutBtn\">\r\n    <img  src=\"../assets/exit.png\" width=\"25\" height=\"25\" (click)=\"signOut()\">\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AdminBoardComponent } from './admin-board/admin-board.component';\r\nimport { UserBoardComponent } from './user-board/user-board.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ShapeService } from './user-board-services/shape.service';\r\nimport { MatModule } from './material.module';\r\n\r\nimport { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { GoogleLoginProvider } from 'angularx-social-login';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JoinRoomDialogComponent } from './join-room-dialog/join-room-dialog.component';\r\nimport { ViewBoardsComponent } from './view-boards/view-boards.component';\r\nimport { CreateBoardDialogComponent } from './create-board-dialog/create-board-dialog.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\n\r\nimport { clientId } from './constants';\r\n\r\n\r\nconst config = new AuthServiceConfig([\r\n  {\r\n    id: GoogleLoginProvider.PROVIDER_ID,\r\n    provider: new GoogleLoginProvider(clientId)\r\n  },\r\n]);\r\n\r\n// const socketConfig: SocketIoConfig = { url: 'http://localhost:4200', options: {} };\r\n\r\nexport function provideConfig() {\r\n  return config;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AdminBoardComponent,\r\n    UserBoardComponent,\r\n    HomeComponent,\r\n    JoinRoomDialogComponent,\r\n    ViewBoardsComponent,\r\n    CreateBoardDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SocialLoginModule,\r\n    BrowserAnimationsModule,\r\n    MatModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    // SocketIoModule.forRoot(socketConfig),\r\n  ],\r\n  entryComponents: [\r\n    JoinRoomDialogComponent,\r\n    CreateBoardDialogComponent\r\n  ],\r\n  providers: [\r\n    ShapeService,\r\n    {\r\n      provide: AuthServiceConfig,\r\n      useFactory: provideConfig\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { URI } from './constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  isExist(userId:string,room_code:string){\r\n    return this.http.get(`${URI}/room/${userId}/${room_code}`);\r\n  }\r\n  \r\n  createBoard(room_code:string,board_title:string,userId:string){\r\n   return this.http.post(`${URI}/board/${userId}/${room_code}`,{room_title: board_title});\r\n  }\r\n\r\n  addJoinedRoom(room_code:string,userId:string) {\r\n    return this.http.post(`${URI}/room/${userId}/${room_code}`,{});\r\n  }\r\n\r\n  viewBoard(userId:string) {\r\n    return this.http.get(`${URI}/user/${userId}`);\r\n  }\r\n}\r\n","const PORT:string = '8080';\r\nconst URI:string = `http://localhost:${PORT}`;\r\n//const clientId:string='610664320073-4ik734pbbflijv056jr130n5k6e7ia8q.apps.googleusercontent.com';\r\nconst clientId:string = '610664320073-4oui7dgr99meb3n28m5ljp25f65fmf79.apps.googleusercontent.com';\r\nexport {URI,clientId};\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\r\nimport { BoardService } from '../board.service';\r\n\r\n@Component({\r\n  selector: 'app-create-board-dialog',\r\n  templateUrl: './create-board-dialog.component.html',\r\n  styleUrls: ['./create-board-dialog.component.css']\r\n})\r\nexport class CreateBoardDialogComponent implements OnInit {\r\n  isexist:boolean = false;\r\n  emptyRoomCode:boolean=true;\r\n  emptyBoardtitle:boolean=true;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any,\r\n    public dialogRef:MatDialogRef<CreateBoardDialogComponent>,\r\n    private boardService:BoardService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  validateTitle(boardtitle:string){\r\n    this.emptyBoardtitle = boardtitle ? false : true;\r\n  }\r\n  validateRoomCode(roomcode:string){\r\n    if(roomcode && roomcode.length>=4){\r\n      this.boardService.isExist(this.data.userId,roomcode).subscribe((result) => {\r\n        this.isexist = result['success'];\r\n        this.emptyRoomCode = false;\r\n      },\r\n      (err) => {\r\n        this.isexist = false;\r\n        this.emptyRoomCode = false;\r\n      }  \r\n      );\r\n    }else{\r\n      this.isexist = false;\r\n      this.emptyRoomCode=true;\r\n    }\r\n    \r\n  }\r\n}\r\n","<h2 mat-dialog-title>Enter Board details:</h2>\r\n<mat-form-field>\r\n    <mat-label>Enter board title:</mat-label>\r\n    <input matInput [(ngModel)]=\"data.boardTitle\" (input)=\"validateTitle(data.boardTitle)\" required>\r\n  </mat-form-field>\r\n  <br>\r\n<mat-form-field>\r\n    <mat-label>Enter room code(Min 4 characters):</mat-label>\r\n    <input matInput [(ngModel)]=\"data.roomCode\" (input)=\"validateRoomCode(data.roomCode)\" required>\r\n</mat-form-field>\r\n<p *ngIf=\"isexist\" class=\"warning\">roomcode already exist</p>\r\n<mat-dialog-actions>\r\n    <button mat-button (click)=\"onCancel()\" >Cancel</button>\r\n    <button mat-button  [mat-dialog-close]=\"data\" [disabled]=\"isexist || emptyRoomCode || emptyBoardtitle\">Create</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { JoinRoomDialogComponent } from '../join-room-dialog/join-room-dialog.component';\r\nimport { CreateBoardDialogComponent } from '../create-board-dialog/create-board-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService,SocialUser } from 'angularx-social-login';\r\nimport { BoardService } from '../board.service';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isAdmin:boolean = false;\r\n  isUser:boolean = false;\r\n  inH:number;\r\n  currentUser:SocialUser;\r\n  constructor(private route:ActivatedRoute,\r\n      private dialog:MatDialog,\r\n      private snackBar:MatSnackBar,\r\n      private router:Router,\r\n      private authService:AuthService,\r\n      private boardService:BoardService,\r\n      private userService:UserService) {\r\n    this.inH = window.innerHeight*0.9;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.authState.subscribe((user) => {\r\n      this.currentUser = user;\r\n      if(!this.currentUser){\r\n        this.router.navigate(['/login']);\r\n      } else {\r\n        this.userService.getUserType(this.currentUser.email).subscribe((result) => {\r\n          if(result['success']) {\r\n            let data = result['data'];\r\n            let userType = data['roles'][0] === 1 ? 'admin' : 'user';\r\n            this.isAdmin = userType === 'admin' ? true : false;\r\n            this.isUser = userType === 'user' ? true : false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createBoard():void {\r\n    let dialogRef = this.dialog.open(CreateBoardDialogComponent,{\r\n      data:{boardTitle:null,roomCode:null,userId:this.currentUser.email}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if(result && result.roomCode && result.boardTitle) {\r\n        let roomCode:string=result.roomCode;\r\n        let boardTitle:string=result.boardTitle;\r\n\r\n        this.boardService.createBoard(roomCode,boardTitle,this.currentUser.email).subscribe((result) => {\r\n          if(result['success'] === true) {\r\n            this.showSnackBar('Board created!','OK');\r\n            this.router.navigate(['/adminboard'],{\r\n              queryParams:{roomCode:roomCode, boardTitle:boardTitle}\r\n            });\r\n          } else {\r\n            this.showSnackBar('cannot create board!','cancel');\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  joinBoard():void {\r\n    let dialogRef = this.dialog.open(JoinRoomDialogComponent,{\r\n      data:{roomCode:null,userId:this.currentUser.email}\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if(result) {\r\n        this.boardService.addJoinedRoom(result,this.currentUser.email).subscribe((value) => {\r\n          if(value['success']){\r\n            this.showSnackBar('Now joining room','OK');\r\n            this.router.navigate(['/userboard'],{queryParams:{room_code:result}});\r\n          }else{\r\n            this.showSnackBar('Unable to join room','cancel');\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.showSnackBar('Unable to join room','cancel');\r\n        }\r\n        );\r\n      } else {\r\n        this.showSnackBar('Please enter the room code to join','cancel');\r\n      }\r\n    });\r\n  }\r\n\r\n  showSnackBar(message:string,action:string):void {\r\n    this.snackBar.open(message,action,{\r\n      duration:3000\r\n    });\r\n  }\r\n\r\n  viewBoard():void {\r\n    this.router.navigate(['/viewboard']);\r\n  }\r\n}\r\n","\r\n<mat-grid-list cols=\"2\" [rowHeight]=\"inH\">\r\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\" >\r\n        <img class=\"image_illus\" src=\"../../assets/illustration.png\" width=\"500\" height=\"400\">\r\n    </mat-grid-tile>\r\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\" >\r\n        <div>\r\n        <button mat-button class=\"card\" *ngIf=\"isAdmin\" (click)=\"createBoard()\">\r\n            <img class=\"icon\" src=\"../../assets/strategy.png\" width=\"48\" height=\"48\">\r\n            Create New Board\r\n        </button>\r\n        <br><br>\r\n        <button mat-button class=\"card\" *ngIf=\"isAdmin || isUser\" (click)=\"joinBoard()\">\r\n            <img class=\"icon\" src=\"../../assets/meeting-room.png\" width=\"48\" height=\"48\">\r\n            Join Board\r\n        </button>\r\n        <br><br>\r\n        <button mat-button class=\"card\" *ngIf=\"isAdmin || isUser\" (click)=\"viewBoard()\">\r\n            <img class=\"icon\" src=\"../../assets/eye.png\" width=\"50\" height=\"50\">\r\n            View Existing Boards\r\n        </button>\r\n        </div> \r\n    </mat-grid-tile>\r\n</mat-grid-list>\r\n<router-outlet></router-outlet>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\r\nimport { BoardService } from '../board.service';\r\n\r\n@Component({\r\n  selector: 'app-join-room-dialog',\r\n  templateUrl: './join-room-dialog.component.html',\r\n  styleUrls: ['./join-room-dialog.component.css']\r\n})\r\nexport class JoinRoomDialogComponent implements OnInit {\r\n  isexist:boolean = true;\r\n  emptyRoomCode:boolean = true;\r\n  message:string='';\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any,\r\n    public dialogRef:MatDialogRef<JoinRoomDialogComponent>,\r\n    private boardService:BoardService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void { \r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  validateRoomCode(roomcode:string){\r\n    if(roomcode && roomcode.length>=4){\r\n      this.boardService.isExist(this.data.userId,roomcode).subscribe((result) => {\r\n        console.log(result);\r\n        if(result['success']){\r\n          if(result['messages'][0] === 'Room Id exists and is accessible'){\r\n            this.isexist = true;\r\n          }else{\r\n            this.isexist = false;\r\n            this.message = result['messages'][0];\r\n          }\r\n        }else{\r\n          this.isexist = false;\r\n          this.message = result['messages'][0];\r\n        }\r\n        this.emptyRoomCode = false;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.isexist = false;\r\n        this.message = 'room code does not exist';\r\n      }  \r\n      );\r\n    }else{\r\n      this.isexist = true;\r\n      this.emptyRoomCode=true;\r\n    }\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Room Code</h2>\r\n<mat-form-field>\r\n    <mat-label>Enter room code(Min 4 characters):</mat-label>\r\n    <input matInput [(ngModel)]=\"data.roomCode\" (input)=\"validateRoomCode(data.roomCode)\" required>\r\n</mat-form-field>\r\n<p *ngIf=\"!isexist\" class=\"warning\">{{message}}</p>\r\n<mat-dialog-actions>\r\n    <button mat-button (click)=\"onCancel()\" >Cancel</button>\r\n    <button mat-button  [mat-dialog-close]=\"data.roomCode\" [disabled]=\"!isexist || emptyRoomCode\">Join</button>\r\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService, SocialUser, GoogleLoginProvider } from 'angularx-social-login';\r\nimport { UserService } from '../user.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  currentUser:SocialUser;\r\n  userType:string=\"admin\";\r\n  inH:number;\r\n  isLoggedIn:boolean = true;\r\n  constructor(\r\n    private authService:AuthService,\r\n    private userService:UserService,\r\n    private snackBar:MatSnackBar,\r\n    private router:Router){\r\n      this.inH = window.innerHeight*0.9;\r\n  }\r\n\r\n  ngOnInit():void {\r\n    this.authService.authState.subscribe((user)=>{\r\n      this.currentUser = user;\r\n      if(this.currentUser){\r\n        this.router.navigate(['/home']);\r\n      }else{\r\n        this.isLoggedIn = false;\r\n      }\r\n    }); \r\n  }\r\n\r\n  onChange(event):void {   \r\n    this.userType=event.value;\r\n  }\r\n\r\n  signIn():void {\r\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then((user) => {\r\n      if(user){\r\n        this.userService.getUserType(user.email).subscribe((result) => {\r\n          console.log(result['success']);\r\n          if(result['success']){\r\n            let data = result['data'];\r\n            console.log(data);\r\n            if((data['roles'][0] === 1 && this.userType === 'admin') || (data['roles'][0] === 2 && this.userType === 'user')) {\r\n                this.showSnackBar('Login Successful','cancel');\r\n                this.router.navigate(['/home']);\r\n            } else {\r\n                this.signOut();\r\n                this.showSnackBar('invalid user or usertype!','cancel');\r\n            } \r\n          }else{\r\n            this.signOut();\r\n            this.showSnackBar(result['messages'],'cancel');\r\n          }\r\n        }); \r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n      this.showSnackBar('Error in signing in','cancel');\r\n    });\r\n  }\r\n\r\n  signOut():void {\r\n    this.authService.signOut();\r\n  }\r\n\r\n  showSnackBar(message:string,action:string):void {\r\n    this.snackBar.open(message,action,{\r\n      duration:3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!isLoggedIn\">\r\n    <mat-grid-list cols=\"2\" [rowHeight]=\"inH\">\r\n        <mat-grid-tile colspan=\"1\" rowspan=\"1\" >\r\n            <img class=\"image_illus\" src=\"../../assets/illustration.png\" width=\"500\" height=\"400\">\r\n        </mat-grid-tile>\r\n        <mat-grid-tile colspan=\"1\" rowspan=\"1\" >\r\n            <div *ngIf=\"!currentUser\" class=\"loginForm\">\r\n                    <h2>Select user type and sign in:</h2>\r\n                    <mat-radio-group #typeOfUser (change)=\"onChange($event)\" class=\"radioBtn\">\r\n                        <mat-radio-button value=\"admin\" color=\"accent\" checked=\"true\">Admin</mat-radio-button>\r\n                        <mat-radio-button value=\"user\">User</mat-radio-button>\r\n                    </mat-radio-group><br>\r\n                    <button mat-button class=\"card\" (click)=\"signIn()\">\r\n                        <span><img src=\"../../assets/icons-google.png\" width=\"30\" height=\"30\" class=\"gIcon\"></span>\r\n                        <span class=\"btnText\">Sign in with Google</span>\r\n                    </button>\r\n            </div>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</div>","import { NgModule } from '@angular/core';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n exports: [\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatTooltipModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n ]\r\n})\r\n\r\nexport class MatModule{ }\r\n\r\n","import { Injectable, OnInit } from '@angular/core';\r\n// import { Socket } from 'ngx-socket-io';\r\nimport * as io from 'socket.io-client';\r\nimport { fabric } from 'fabric';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SocketService {\r\n  private url = \"http://localhost:8080\";\r\n  public socket;\r\n  constructor() {\r\n  }\r\n\r\n  connect(){\r\n    this.socket = io(this.url);\r\n  }\r\n\r\n  sendGroup(group: fabric.Group, id: string) {\r\n    this.socket.emit('groupAltered',\r\n      [{\r\n        id: group.id,\r\n        left: group.left,\r\n        top: group.top,\r\n        angle: group.angle,\r\n        scaleX: group.scaleX,\r\n        scaleY: group.scaleY\r\n      },\r\n      id]);\r\n  }\r\n\r\n  somethingAdded(shape: string, color: string, id: string) {\r\n    this.socket.emit('addedObject', [shape, color, id]);\r\n  }\r\n\r\n  somethingModified(groupId: any, currentUser, id: string) {\r\n    this.socket.emit('modifiedObject', [groupId, currentUser, id]);\r\n  }\r\n\r\n  clearCanvas(canvas: fabric.Canvas, id: string) {\r\n    this.socket.emit('clearCanvas', [canvas, id]);\r\n  }\r\n\r\n  colorChange(data, color: string, id: string) {\r\n    this.socket.emit('colorChange', [data, color, id]);\r\n  }\r\n\r\n  joinRoom(id: string) {\r\n    this.socket.emit('joinRoom', id);\r\n  }\r\n\r\n  deleteGroup(data, id: string) {\r\n    this.socket.emit('deleteGroup', [data, id]);\r\n  }\r\n\r\n  regr(text: any, textId: any, id: string) {\r\n    this.socket.emit('regrouping', [text, textId, id]);\r\n  }\r\n\r\n  drawLines(can: any) {\r\n    const arr = [can.f, can.s, can.roomId];\r\n    this.socket.emit('drawingLines', arr);\r\n  }\r\n\r\n  disconnect(){\r\n    if(this.socket){\r\n      this.socket.removeAllListeners();\r\n      this.socket.close();\r\n      this.socket = undefined;\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { GroupService } from '../user-board-services/group.service';\r\nimport { ShapeService } from '../user-board-services/shape.service';\r\nimport { fabric } from 'fabric';\r\nimport { SocketService } from './socket.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserSocketService {\r\n  roomId;\r\n  constructor(\r\n    private groupService: GroupService,\r\n    private shapeService: ShapeService,\r\n    private socketService: SocketService\r\n  ) { }\r\n\r\n  init(canvas, renderer, roomId) {\r\n    this.roomId = roomId;\r\n    this.socketService.joinRoom(this.roomId);\r\n\r\n    this.socketService.socket.on('groupAltered', (data) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n      for (const obj of canvas.getObjects()) {\r\n        if (obj instanceof fabric.Group) {\r\n          if (obj.id === data.id) {\r\n            obj.left = data.left;\r\n            obj.top = data.top;\r\n            obj.scaleX = data.scaleX;\r\n            obj.scaleY = data.scaleY;\r\n            obj.angle = data.angle || 0;\r\n            this.groupService.moveLines(obj);\r\n            obj.setCoords();\r\n            canvas.renderAll();\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.socketService.socket.on('addedObject', (data) => {\r\n      if (data[0] === 'rect') {\r\n        this.shapeService.addRectangle(canvas, renderer, data[1]);\r\n      } else if (data[0] === 'ellipse') {\r\n        this.shapeService.addEllipse(canvas, renderer, data[1]);\r\n      } else {\r\n        this.shapeService.addTriangle(canvas, renderer, data[1]);\r\n      }\r\n    });\r\n\r\n    this.socketService.socket.on('modifiedObject', (data) => {\r\n      const h = data[0];\r\n      document.getElementById('deleteBtn')?.remove();\r\n      let gr;\r\n      for (const ob of canvas._objects) {\r\n        if (ob.id === h) {\r\n          gr = ob;\r\n          break;\r\n        }\r\n      }\r\n      const shape = gr._objects[0];\r\n      const text = gr._objects[1];\r\n      text.fill = '#7f8c8d';\r\n      text.fontStyle = 'italic';\r\n      shape.set('opacity', 0.7);\r\n      text.set('text', `${data[1].firstName} is editing`);\r\n      this.groupService.unGroup(gr, canvas);\r\n      text.lockMovementX = false;\r\n      text.lockMovementY = false;\r\n    });\r\n\r\n    this.socketService.socket.on('regrouping', (h: any) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n      let g: fabric.Group;\r\n      for (const ob of this.groupService.selectedGroup){\r\n        if (ob.id === h[1]){\r\n          g = ob;\r\n          break;\r\n        }\r\n      }\r\n      const shape = g._objects[0];\r\n      const text = g._objects[1];\r\n      text.fill = '#333';\r\n      text.fontStyle = 'normal';\r\n      text.set('text', h[0]);\r\n      shape.set('opacity', 1);\r\n      this.groupService.regroup(shape, text, canvas, renderer);\r\n    });\r\n\r\n    this.socketService.socket.on('clearCanvas', (can) => {\r\n      canvas.clear();\r\n      this.shapeService.setBackground(canvas, 'assets');\r\n      document.getElementById('deleteBtn')?.remove();\r\n    });\r\n\r\n    this.socketService.socket.on('colorChange', (data) => {\r\n      let gr;\r\n      for (const ob of canvas._objects) {\r\n        if (ob.id === data[0]) {\r\n          gr = ob;\r\n          break;\r\n        }\r\n      }\r\n      const text = gr._objects[1];\r\n      const shape = gr._objects[0];\r\n      this.groupService.unGroup(gr, canvas);\r\n      shape.fill = data[1];\r\n      this.groupService.regroup(shape, text, canvas, renderer);\r\n    });\r\n\r\n    this.socketService.socket.on('deleteGroup', (data) => {\r\n      let gr;\r\n      for (const ob of canvas._objects) {\r\n        if (ob.id === data) {\r\n          gr = ob;\r\n          break;\r\n        }\r\n      }\r\n      this.groupService.delete(canvas, gr);\r\n    });\r\n\r\n    this.socketService.socket.on('drawingLines', (data: any) => {\r\n      const h = {\r\n        f: data[0],\r\n        s: data[1],\r\n      };\r\n      for (const obj of canvas._objects) {\r\n        if (h.f === obj.id) {\r\n          canvas.selectedElements.push(obj);\r\n        }\r\n        if(h.s === obj.id){\r\n          canvas.selectedElements.push(obj);\r\n        }\r\n      }\r\n      this.groupService.drawLineTwoPoints(canvas);\r\n      canvas.selectedElements.splice(0, 2);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConstantsService {\r\n\r\n  HideControls: object;\r\n  userBackURL: string;\r\n  starIconURL: string;\r\n  PORT: string;\r\n  URI: string;\r\n  clientId: string;\r\n  colors: Array<string>;\r\n  connectText: string;\r\n  disconnectText: string;\r\n  public userID: string;\r\n  public roomID: string;\r\n\r\n\r\n  constructor() {\r\n    this.HideControls = { tl: true, tr: false, bl: true, br: true, ml: true, mt: true, mr: true, mb: true, mtr: true };\r\n    this.userBackURL = '../../assets/user_back.png';\r\n    this.PORT = '8080';\r\n    this.URI = `http://localhost:${this.PORT}`;\r\n    this.starIconURL = '../assets/stars-black-48dp.svg';\r\n    this.colors = ['CornflowerBlue', 'darkcyan', 'MediumAquaMarine', 'lemonchiffon', 'gold', 'silver', 'salmon', 'palevioletred', 'pink'];\r\n    this.connectText = 'Connect';\r\n    this.disconnectText = 'Exit Connection Mode';\r\n   }\r\n}\r\n","import { Injectable, Renderer2 } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { ScalingService } from './scaling.service';\r\nimport { ConstantsService } from './constants.service';\r\nimport { SocketService } from '../socket-services/socket.service';\r\nimport { UserDatabaseService } from './user-database.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GroupService {\r\n  selectedGroup: Array<fabric.Group> = [];\r\n  givingId;\r\n  currentUser;\r\n  constructor(private scalingService: ScalingService, private constants: ConstantsService,\r\n              private socketService: SocketService, private userDatabase: UserDatabaseService) {\r\n    this.givingId = 0;\r\n    this.currentUser = 'Unknown';\r\n  }\r\n\r\n  makeLine(coords: fabric.Point) {\r\n    return new fabric.Line(coords, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      opacity: 0.6,\r\n      selectable: false,\r\n      preserveObjectStacking: true,\r\n    });\r\n  }\r\n\r\n  createGroup(shape: fabric.Object, text: fabric.Itext, canvas: fabric.Canvas, x: number, y: number,\r\n              connections: Array<{ name: string; line: fabric.Line; connectedWith: fabric.Group; i: any; }>,\r\n              renderer: Renderer2, groupID: number, editing: boolean,\r\n              angle: number, scaleX: number, scaleY: number): fabric.Group {\r\n    this.scalingService.scaleShapes(shape, text.getBoundingRect());\r\n    const group = new fabric.Group([shape, text], {\r\n      angle,\r\n      scaleX,\r\n      scaleY,\r\n      left: x,\r\n      top: y,\r\n      connections,\r\n      isEditable: true,\r\n    });\r\n    if (groupID === -1) {\r\n      group.id = this.givingId;\r\n      text.id = this.givingId;\r\n      this.givingId += 1;\r\n      canvas.givingId = this.givingId;\r\n    }\r\n    else{\r\n      group.id = groupID;\r\n      text.id = groupID;\r\n    }\r\n    group.type = 'group';\r\n    group.editing = editing;\r\n    group.setControlsVisibility(this.constants.HideControls);\r\n    this.addEventListeners(canvas, group, renderer);\r\n    canvas.add(group);\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n    return group;\r\n  }\r\n\r\n  doubleClickEvent(obj, handler) {\r\n    return () => {\r\n      if (obj.clicked) {\r\n        handler(obj);\r\n      } else {\r\n        obj.clicked = true;\r\n        setTimeout(() => {\r\n          obj.clicked = false;\r\n        }, 500);\r\n      }\r\n    };\r\n  }\r\n\r\n  unGroup(group: fabric.Group, canvas: fabric.Canvas) {\r\n    this.selectedGroup.push(group);\r\n    group.editing = true;\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n    const items = group._objects;\r\n    group._restoreObjectsState();\r\n    canvas.remove(group);\r\n    for (const item of items) {\r\n      canvas.add(item);\r\n    }\r\n    canvas.renderAll();\r\n  }\r\n\r\n  regroup(shape: fabric.Object, text: fabric.IText,\r\n          canvas: fabric.Canvas, renderer: Renderer2) {\r\n    let g: fabric.Group;\r\n    let  u = 0;\r\n    for (const ob of this.selectedGroup){\r\n      if (ob.id === text.id){\r\n        g = ob;\r\n        break;\r\n      }\r\n      u++;\r\n    }\r\n    const groupCoord = g.getPointByOrigin(0, 0);\r\n    canvas.remove(shape);\r\n    canvas.remove(text);\r\n    this.createGroup(\r\n      shape,\r\n      text,\r\n      canvas,\r\n      groupCoord.x,\r\n      groupCoord.y,\r\n      g.connections,\r\n      renderer,\r\n      g.id,\r\n      false,\r\n      g.angle,\r\n      g.scaleX,\r\n      g.scaleY\r\n    );\r\n    this.selectedGroup.splice(u, 1);\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n  }\r\n\r\n  drawLineTwoPoints(canvas: fabric.Canvas) {\r\n    const group1 = canvas.selectedElements[0];\r\n    const group2 = canvas.selectedElements[1];\r\n    const line = this.makeLine([\r\n      group1.getCenterPoint().x,\r\n      group1.getCenterPoint().y,\r\n      group2.getCenterPoint().x,\r\n      group2.getCenterPoint().y,\r\n    ]);\r\n    canvas.add(line);\r\n    canvas.sendToBack(line);\r\n    group1.connections.push({ name: 'p1', line, connectedGroup: group2.id });\r\n    group2.connections.push({ name: 'p2', line, connectedGroup: group1.id });\r\n    canvas.connect = false;\r\n    canvas.connectButtonText = this.constants.connectText;\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n  }\r\n\r\n  moveLines(group: fabric.Group) {\r\n    const newPoint = group.getCenterPoint();\r\n    for (const connection of group.connections) {\r\n      if (connection.name === 'p1') {\r\n        connection.line.set({\r\n          x1: newPoint.x,\r\n          y1: newPoint.y,\r\n        });\r\n      } else {\r\n        connection.line.set({\r\n          x2: newPoint.x,\r\n          y2: newPoint.y,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  delete(canvas: fabric.Canvas, gr?: fabric.Group) {\r\n    let group;\r\n    if (gr) {\r\n      group = gr;\r\n    } else {\r\n      group = canvas.getActiveObject();\r\n      this.socketService.deleteGroup(group.id, this.constants.roomID);\r\n    }\r\n    for (const connection of group.connections) {\r\n      // tslint:disable-next-line: forin\r\n      for (const index in connection.connectedGroup.connections) {\r\n        const otherGroupConnections = connection.connectedGroup.connections;\r\n        if (otherGroupConnections[index].connectedGroup === group) {\r\n          otherGroupConnections.splice(index, 1);\r\n        }\r\n      }\r\n      canvas.remove(connection.line);\r\n    }\r\n    canvas.remove(group);\r\n    canvas.renderAll();\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n  }\r\n\r\n  addDeleteBtn(x: number, y: number, canvas: fabric.Canvas, renderer: Renderer2) {\r\n    document.getElementById('deleteBtn')?.remove();\r\n    const btnLeft = x - 10;\r\n    const btnTop = y - 10;\r\n    const delteBtn = renderer.createElement('img');\r\n    delteBtn.id = 'deleteBtn';\r\n    delteBtn.src = '../assets/icons8-delete.svg';\r\n    delteBtn.style = `position:absolute;\r\n    top:${btnTop}px;\r\n    left:${btnLeft}px;\r\n    cursor:pointer;\r\n    width:20px;\r\n    height:20px;`;\r\n    renderer.appendChild(document.getElementsByClassName('canvas-container')[0], delteBtn);\r\n    document.getElementById('deleteBtn').addEventListener('click', (event) => {\r\n      this.delete(canvas);\r\n    });\r\n    this.userDatabase.sendingCanvas(canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n  }\r\n\r\n  addEventListeners(canvas: fabric.Canvas, group: fabric.Group, renderer: Renderer2) {\r\n    group.on('selected', (e) => {\r\n      this.addDeleteBtn(\r\n        group.oCoords.tr.x,\r\n        group.oCoords.tr.y,\r\n        canvas,\r\n        renderer\r\n      );\r\n    });\r\n\r\n    group.on('modified', (e) => {\r\n      this.addDeleteBtn(\r\n        group.oCoords.tr.x,\r\n        group.oCoords.tr.y,\r\n        canvas,\r\n        renderer\r\n      );\r\n    });\r\n\r\n    group.on('scaling', (e) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n      this.socketService.sendGroup(group, this.constants.roomID);\r\n    });\r\n\r\n    group.on('moving', (e) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n      if (group.connections.length > 0) {\r\n        this.moveLines(group);\r\n        canvas.renderAll();\r\n      }\r\n      this.socketService.sendGroup(group, this.constants.roomID);\r\n    });\r\n\r\n    group.on('rotating', (e) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n      this.socketService.sendGroup(group, this.constants.roomID);\r\n    });\r\n\r\n    group.on('removed', (e) => {\r\n      document.getElementById('deleteBtn')?.remove();\r\n    });\r\n\r\n    group.on(\r\n      'mousedown',\r\n      this.doubleClickEvent(group, () => {\r\n        if (canvas.connect) {\r\n          canvas.selectedElements.push(group);\r\n          if (canvas.selectedElements.length === 2) {\r\n            this.drawLineTwoPoints(canvas);\r\n            this.socketService.drawLines({\r\n              f: canvas.selectedElements[0].id,\r\n              s: canvas.selectedElements[1].id,\r\n              roomId: this.constants.roomID,\r\n            }, );\r\n            canvas.selectedElements.pop();\r\n            canvas.selectedElements.pop();\r\n          }\r\n        } else {\r\n          group.isEditable = false;\r\n          this.socketService.somethingModified(group.id, this.currentUser, this.constants.roomID);\r\n          this.unGroup(group, canvas);\r\n          const text1 = group._objects[1];\r\n          text1.lockMovementX = false;\r\n          text1.lockMovementY = false;\r\n          canvas.setActiveObject(text1);\r\n          text1.enterEditing();\r\n          text1.selectAll();\r\n        }\r\n      })\r\n    );\r\n\r\n    canvas.on('mouse:down', (e) => {\r\n      if (!canvas.getActiveObject()) {\r\n        document.getElementById('deleteBtn')?.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { fabric } from 'fabric';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScalingService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  scaleShapes(shape: fabric.Object, textBoundingRect) {\r\n    let resize = false;\r\n    const height = shape.height * shape.scaleY;\r\n    const width = shape.width * shape.scaleX;\r\n    resize = this.compareTextShape(shape, height, textBoundingRect.height) || this.compareTextShape(shape, width, textBoundingRect.width);\r\n\r\n    if (shape instanceof fabric.Ellipse && resize) {\r\n      if (shape.width < textBoundingRect.width) {\r\n        shape.width = textBoundingRect.width + 60;\r\n      }\r\n      if (shape.height < textBoundingRect.height) {\r\n        shape.height = textBoundingRect.height + 60;\r\n      }\r\n      shape.rx = shape.width / 2;\r\n      shape.ry = shape.height / 2;\r\n    }\r\n  }\r\n\r\n  compareTextShape(shape: fabric.Shape, shapeDimen: number, textDimen: number): boolean {\r\n if (shape instanceof fabric.Rect){\r\n    if (shapeDimen < textDimen) {\r\n      (shape.height * shape.scaleY) === shapeDimen ? shape.height = textDimen + 20 : shape.width = textDimen + 20;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n if (shape instanceof fabric.Triangle){\r\n  if (shapeDimen / 2 < textDimen) {\r\n    if ((shape.height * shape.scaleY) === shapeDimen) {\r\n      shape.height = Math.max(shapeDimen, textDimen) * 1.5;\r\n      shape.width *= 1.5;\r\n    }\r\n    else {\r\n      shape.width = Math.max(shapeDimen, textDimen) * 2;\r\n      shape.height *= 1.5;\r\n     }\r\n    return true;\r\n  }\r\n  return false;\r\n  }\r\n return true;\r\n }\r\n}\r\n","import { Injectable, Renderer2 } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { GroupService } from './group.service';\r\nimport { UserDatabaseService } from './user-database.service';\r\nimport { ConstantsService } from './constants.service';\r\nimport { SocketService } from '../socket-services/socket.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ShapeService {\r\n  private image: fabric.Image;\r\n\r\n  constructor(\r\n    private groupService: GroupService,\r\n    private userDatabaseService: UserDatabaseService,\r\n    private constants: ConstantsService,\r\n    private socketService: SocketService\r\n  ) {}\r\n\r\n  initCanvas(renderer: Renderer2){\r\n    this.image = null;\r\n    fabric.Object.prototype.transparentCorners = false;\r\n    const canvas = new fabric.Canvas('canvas', {\r\n      hoverCursor: 'pointer',\r\n      selection: true,\r\n    });\r\n    canvas.setHeight(650);\r\n    canvas.setWidth(1200 - 10);\r\n    canvas.selectedElements = [];\r\n    canvas.selectedColor = this.constants.colors[0];\r\n    this.getTitleFromDatabase(canvas, renderer);\r\n    return canvas;\r\n  }\r\n\r\n  setBackground(canvas: fabric.Canvas, base64: string) {\r\n    canvas.connect = false;\r\n    canvas.connectButtonText = 'Connect';\r\n    if (this.image) {\r\n      canvas.setBackgroundImage(this.image);\r\n      canvas.renderAll();\r\n    } else {\r\n      const imageEle = new Image();\r\n      imageEle.src = base64;\r\n      imageEle.onload = () => {\r\n        this.image = new fabric.Image(imageEle, {\r\n          width: canvas.width,\r\n          height: canvas.height,\r\n          opacity: 0.7,\r\n        });\r\n        canvas.setBackgroundImage(this.image);\r\n        canvas.renderAll();\r\n      };\r\n    }\r\n  }\r\n\r\n  addEllipse(canvas: fabric.Canvas, renderer: Renderer2, color?: string) {\r\n    const ellipse = new fabric.Ellipse({\r\n      originX: 'center',\r\n      originY: 'center',\r\n      fill: color ? color : canvas.selectedColor,\r\n      rx: 100,\r\n      ry: 50,\r\n      stroke: 'black',\r\n      strokeWidth: 0.3,\r\n      selectable: false,\r\n    });\r\n    this.addText(ellipse, canvas, renderer, 'Double click to edit', -1, 100, 100, false, 0, 1, 1);\r\n  }\r\n\r\n  addRectangle(canvas: fabric.Canvas, renderer: Renderer2, color?: string) {\r\n    const rect = new fabric.Rect({\r\n      originX: 'center',\r\n      originY: 'center',\r\n      width: 200,\r\n      height: 100,\r\n      rx: 10,\r\n      ry: 10,\r\n      stroke: 'black',\r\n      strokeWidth: 0.3,\r\n      fill: color ? color : canvas.selectedColor,\r\n      selectable: false,\r\n      strokeLineJoin: 'round',\r\n    });\r\n    this.addText(rect, canvas, renderer, 'Double click to edit', -1, 100, 100, false, 0, 1, 1);\r\n  }\r\n\r\n  addTriangle(canvas: fabric.Canvas, renderer: Renderer2, color?: string){\r\n    const triangle = new fabric.Triangle({\r\n      originX: 'center',\r\n      originY: 'center',\r\n      width: 200,\r\n      height: 150,\r\n      rx: 10,\r\n      ry: 10,\r\n      stroke: 'black',\r\n      strokeWidth: 0.3,\r\n      fill: color ? color : canvas.selectedColor,\r\n      selectable: false,\r\n      strokeLineJoin: 'round',\r\n    });\r\n    this.addText(triangle, canvas, renderer, 'Double \\ntap to edit', -1, 100, 100, false, 0, 1, 1);\r\n  }\r\n\r\n  addText(\r\n    shape: fabric.Object,\r\n    canvas: fabric.Canvas,\r\n    renderer: Renderer2,\r\n    textVal: string,\r\n    groupID: number,\r\n    x: number,\r\n    y: number,\r\n    editing: boolean,\r\n    angle: number,\r\n    scaleX: number,\r\n    scaleY: number) {\r\n    const text = new fabric.IText(textVal, {\r\n      fill: '#333',\r\n      charSpacing : 100,\r\n      fontSize: 15,\r\n      originX: 'center',\r\n      originY: 'center',\r\n      textAlign: 'center',\r\n      fontFamily:  'Trebuchet MS',\r\n      top: 0,\r\n      left: 0,\r\n      selectable: false,\r\n    });\r\n    this.addTextListener(canvas, shape, text, renderer);\r\n    return this.groupService.createGroup(shape, text, canvas, x, y, [], renderer, groupID, editing, angle, scaleX, scaleY);\r\n  }\r\n\r\n  addTextListener(canvas, shape, text, renderer){\r\n    text.on('editing:exited', () => {\r\n      this.socketService.regr(text.text, text.id, this.constants.roomID);\r\n      this.groupService.regroup(shape, text, canvas, renderer);\r\n    });\r\n  }\r\n\r\n  changeColor(canvas: fabric.Canvas, color: string, renderer: Renderer2) {\r\n    canvas.selectedColor = color;\r\n    const group = canvas.getActiveObject();\r\n    if (group) {\r\n      const shape = group._objects[0];\r\n      const text = group._objects[1];\r\n      this.socketService.colorChange(\r\n        group.id,\r\n        color,\r\n        this.constants.roomID\r\n      );\r\n      this.groupService.unGroup(group, canvas);\r\n      shape.fill = color;\r\n      this.groupService.regroup(shape, text, canvas, renderer);\r\n      for (const obj of canvas._objects) {\r\n        if (obj.id === text.id) {\r\n          canvas.setActiveObject(obj);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getTitleFromDatabase(canvas: fabric.Canvas, renderer) {\r\n    this.constants.roomID === 'unknown'\r\n      ? (canvas.boardTitle = 'UserUI')\r\n      : this.userDatabaseService.getRoomData().subscribe(\r\n          (roomData) => {\r\n            canvas.boardTitle = roomData.data.room_data.room_title;\r\n            if (roomData.data.room_data.canvas_json) {this.loadCanvas(canvas, JSON.parse(roomData.data.room_data.canvas_json), renderer); }\r\n            this.setBackground(canvas, roomData.data.room_data.base64);\r\n          },\r\n          (error) => {\r\n            canvas.boardTitle = 'UserUI';\r\n            this.setBackground(canvas, this.constants.userBackURL);\r\n          }\r\n        );\r\n  }\r\n\r\n  loadCanvas(canvas: fabric.Canvas, canvasJson, renderer: Renderer2){\r\n    const newCanvas = new fabric.Canvas();\r\n    newCanvas.loadFromJSON(canvasJson);\r\n    this.groupService.givingId = newCanvas.givingId;\r\n    canvas.givingId = newCanvas.givingId;\r\n    const groupArray = [];\r\n    for (const object of newCanvas._objects){\r\n      if (object.type === 'group'){\r\n        const shape = object._objects[0];\r\n        const groupCoord = object.getPointByOrigin(0, 0);\r\n        const group = this.addText(shape, canvas, renderer, object._objects[1].text, object.id, groupCoord.x,\r\n                                   groupCoord.y, object.editing, object.angle, object.scaleX, object.scaleY);\r\n        groupArray.push(group);\r\n      }\r\n    }\r\n\r\n    for (const group of groupArray){\r\n      for (const object of newCanvas._objects){\r\n        if (object.id === group.id){\r\n          this.drawLinesWhileLoading(canvas, object, group);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const group of groupArray){\r\n      if (group.editing){\r\n        const shape = group._objects[0];\r\n        const text = group._objects[1];\r\n        text.fill = '#7f8c8d';\r\n        text.fontStyle = 'italic';\r\n        shape.set('opacity', 0.7);\r\n        text.set('text', ` Someone is editing`);\r\n        this.ungroupOnLoad(group, canvas);\r\n        text.lockMovementX = false;\r\n        text.lockMovementY = false;\r\n      }\r\n    }\r\n    canvas.renderAll();\r\n  }\r\n\r\n  ungroupOnLoad(group, canvas){\r\n    this.groupService.selectedGroup.push(group);\r\n    group.editing = true;\r\n    const items = group._objects;\r\n    group._restoreObjectsState();\r\n    canvas.remove(group);\r\n    for (const item of items) {\r\n      item.selectable = false;\r\n      canvas.add(item);\r\n    }\r\n  }\r\n\r\n  drawLinesWhileLoading(canvas, object, group){\r\n    canvas.selectedElements.push(group);\r\n    for (const connection of object.connections){\r\n      if (connection.name === 'p1'){\r\n        for (const connectedGroup of canvas._objects){\r\n          if (connectedGroup.id === connection.connectedGroup){\r\n            canvas.selectedElements.push(connectedGroup);\r\n            this.groupService.drawLineTwoPoints(canvas);\r\n            canvas.selectedElements.pop();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    canvas.selectedElements.pop();\r\n  }\r\n}\r\n\r\nexport class MockShapeService {\r\n  initCanvas(url: string) {\r\n    const canvas = {\r\n      selectedColor: 'cornsilk',\r\n      connect: false,\r\n      connectButtonText: 'Connect',\r\n      selectedElements: [],\r\n      _objects: [1, 2],\r\n      clear: () => {\r\n        canvas._objects = [];\r\n      },\r\n    };\r\n    return canvas;\r\n  }\r\n\r\n  changeColor(canvas, color) {\r\n    canvas.selectedColor = color;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ConstantsService } from './constants.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDatabaseService {\r\n\r\n  constructor(private http: HttpClient, private constants: ConstantsService) { }\r\n\r\n  sendingCanvas(canvasJSON: any){\r\n    delete canvasJSON.backgroundImage;\r\n    this.http.put(`http://localhost:4200/board/${this.constants.userID}/${this.constants.roomID}`,\r\n      {canvas_json: JSON.stringify(canvasJSON)}, {responseType: 'json'})\r\n      .subscribe( responseData => {});\r\n   }\r\n\r\n  getRoomData(): Observable<RoomData> {\r\n    return this.http.get(`${this.constants.URI}/board/${this.constants.userID}/${this.constants.roomID}`) as Observable<RoomData>;\r\n  }\r\n}\r\n\r\ninterface RoomData{\r\n  success: string;\r\n  data: { room_data: {\r\n    canvas_json: string,\r\n    base64: string,\r\n    room_title: string,\r\n  }\r\n};\r\n}\r\n","import { Component, OnInit, Renderer2, OnDestroy } from '@angular/core';\r\nimport { fabric } from 'fabric';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ShapeService } from '../user-board-services/shape.service';\r\nimport { ConstantsService } from '../user-board-services/constants.service';\r\nimport { SocketService } from '../socket-services/socket.service';\r\nimport { UserSocketService } from '../socket-services/user-socket.service';\r\nimport { AuthService, SocialUser } from 'angularx-social-login';\r\nimport { GroupService } from '../user-board-services/group.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { UserDatabaseService } from '../user-board-services/user-database.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-board',\r\n  templateUrl: './user-board.component.html',\r\n  styleUrls: ['./user-board.component.css'],\r\n})\r\nexport class UserBoardComponent implements OnInit, OnDestroy {\r\n  canvas: fabric.Canvas;\r\n  boardTitle: string;\r\n\r\n  constructor(\r\n    private shapeService: ShapeService,\r\n    private groupService: GroupService,\r\n    private renderer: Renderer2,\r\n    private route: ActivatedRoute,\r\n    public constants: ConstantsService,\r\n    private socketService: SocketService,\r\n    private userSocketService: UserSocketService,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar,\r\n    private userDatabase: UserDatabaseService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.constants.roomID = this.route.snapshot.queryParamMap.get('room_code') || 'unknown';\r\n    this.socketService.connect();\r\n    this.canvas = this.shapeService.initCanvas(this.renderer);\r\n    this.userSocketService.init(this.canvas, this.renderer, this.constants.roomID);\r\n    this.authService.authState.subscribe((user) => {\r\n      this.groupService.currentUser = user;\r\n      this.constants.userID = user.email;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    // this.socketService.socket.emit('disconnect');\r\n    this.socketService.disconnect();\r\n  }\r\n\r\n  addObj(shape) {\r\n    this.socketService.somethingAdded(\r\n      shape,\r\n      this.canvas.selectedColor,\r\n      this.constants.roomID,\r\n    );\r\n  }\r\n\r\n  addEllipse() {\r\n    this.shapeService.addEllipse(this.canvas, this.renderer);\r\n    this.addObj('ellipse');\r\n  }\r\n\r\n  addRectangle() {\r\n    this.shapeService.addRectangle(this.canvas, this.renderer);\r\n    this.addObj('rect');\r\n  }\r\n\r\n  addTriangle() {\r\n    this.shapeService.addTriangle(this.canvas, this.renderer);\r\n    this.addObj('triangle');\r\n  }\r\n\r\n  clear() {\r\n      this.canvas.clear();\r\n      this.shapeService.setBackground(this.canvas, 'assets');\r\n      this.socketService.clearCanvas(this.canvas, this.constants.roomID);\r\n      document.getElementById('deleteBtn')?.remove();\r\n      this.userDatabase.sendingCanvas(this.canvas.toJSON(['id', 'connections', 'givingId', 'editing']));\r\n  }\r\n\r\n  showSnackBar(message: string, action: string): void {\r\n    const snackBarRef = this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n    snackBarRef.onAction().subscribe(() => {\r\n      this.clear();\r\n    });\r\n  }\r\n\r\n  connect() {\r\n    if (this.canvas.connect) {\r\n      this.canvas.connect = false;\r\n      this.canvas.connectButtonText = this.constants.connectText;\r\n    }\r\n    else {\r\n      while (this.canvas.selectedElements.length > 0) {\r\n        this.canvas.selectedElements.pop();\r\n      }\r\n      this.canvas.connect = true;\r\n      this.canvas.connectButtonText = this.constants.disconnectText;\r\n    }\r\n  }\r\n\r\n  exportAsImage(canvasContent) {\r\n    // for IE, Edge\r\n    if (canvasContent.msToBlob) {\r\n      const blob = canvasContent.msToBlob();\r\n      window.navigator.msSaveBlob(blob, 'board-image.png');\r\n    } else {\r\n      // other browsers\r\n      const image = canvasContent\r\n        .toDataURL('image/png', 1.0)\r\n        .replace('image/png', 'image/octet-stream');\r\n      const link = document.createElement('a');\r\n      link.download = 'board-image.png';\r\n      link.href = image;\r\n      link.click();\r\n    }\r\n  }\r\n\r\n  changeColor(color: string) {\r\n    this.shapeService.changeColor(this.canvas, color, this.renderer);\r\n  }\r\n}\r\n","<div style=\"text-align: center;\">\r\n\r\n  <div class=\"button-row\">\r\n\r\n    <div class=\"title\">{{canvas.boardTitle}}</div>\r\n\r\n    <div class=\"button-row-right\">\r\n\r\n      <button mat-flat-button (click)=\"addRectangle()\" color=\"accent\" [disabled]=\"canvas.connect\">\r\n        <mat-icon>crop_3_2</mat-icon>\r\n        Rectangle\r\n      </button>\r\n      <button mat-flat-button (click)=\"addEllipse()\" color=\"accent\" [disabled]=\"canvas.connect\">\r\n        <mat-icon>radio_button_unchecked</mat-icon>\r\n        Ellipse\r\n      </button>\r\n      <button mat-flat-button (click)=\"addTriangle()\" color=\"accent\" [disabled]=\"canvas.connect\">\r\n        <mat-icon>change_history</mat-icon>\r\n        Triangle\r\n      </button>\r\n      <button class=\"connectButton\" mat-flat-button (click)=\"connect()\" color=\"accent\">\r\n        <mat-icon>timeline</mat-icon>\r\n        {{canvas.connectButtonText}}\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div id=\"canvas-div\" style=\"display: inline-flex;\">\r\n\r\n    <div class=\"button-col\">\r\n      <div *ngFor=\"let color of constants.colors;\">\r\n        <button mat-mini-fab class={{color}} style=\"border: 1px solid darkslategray;\" (click)=\"changeColor(color)\">\r\n          <mat-icon *ngIf=\"canvas.selectedColor == color\" [style.color]=\"'black'\">done</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <canvas id=\"canvas\" #canvasContent></canvas>\r\n\r\n    <div class=\"button-col\">\r\n      <button mat-fab class=\"clearButton redButton but-col-right\" matTooltip=\"Clear Screen\" matTooltipPosition='after'\r\n        color=\"warn\" (click)=\"showSnackBar('Do you want to clear the screen?','OK')\" [disabled]=\"canvas.connect\">\r\n        <mat-icon>layers_clear</mat-icon>\r\n      </button>\r\n\r\n      <button mat-fab class=\"redButton but-col-right\" matTooltip=\"Export\" matTooltipPosition='after' color=\"warn\"\r\n        (click)=\"exportAsImage(canvasContent)\">\r\n        <mat-icon>cloud_download</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p class=\"mat-h2 noteEle\" *ngIf=\"canvas.connect\"> Note: Double click on any two cards to\r\n    connect.{{canvas.selectedElements.length}} selected </p>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { URI } from './constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  getUserType(email:string){\r\n    return this.http.get(`${URI}/user/${email}`);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SocialUser, AuthService } from 'angularx-social-login';\r\nimport { BoardService } from '../board.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-boards',\r\n  templateUrl: './view-boards.component.html',\r\n  styleUrls: ['./view-boards.component.css']\r\n})\r\nexport class ViewBoardsComponent implements OnInit {\r\n  currentUser:SocialUser;\r\n  boards:any;\r\n  constructor(private router:Router,\r\n    private authService:AuthService,\r\n    private boardService:BoardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.authState.subscribe((user) => {\r\n      this.currentUser = user;\r\n      if(!this.currentUser){\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n    this.boardService.viewBoard(this.currentUser.email).subscribe((result) => {\r\n      if(result['success']){\r\n        let data = result['data'];\r\n        this.boards = data.boards;\r\n      }else{\r\n        console.log('unable to fetch boards');\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h2 class=\"title\">Existing Boards</h2>\r\n\r\n<div *ngFor='let board of boards' class=\"card\">\r\n    <div class=\"container\">\r\n        <p class=\"btitle\"><b>{{board.room_title}}</b></p>\r\n        <p class=\"roomCode\">Room Code: {{board.room_id}}</p>\r\n    </div>\r\n    <button mat-button class=\"viewBtn\">\r\n        <a routerLink='/userboard' [queryParams]='{room_code: board.room_id}'>View</a>\r\n    </button>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}